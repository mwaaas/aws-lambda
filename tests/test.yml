---
- hosts: all
  connection: local
  gather_facts: no
  vars:
    aws_tags:
      Owner: engineeringke
      Environment: development
      Classification: restricted
      Status: active
    region: "eu-west-1"
    stack_name: "aws-lambda"
    s3_stack_name: "{{ stack_name }}-s3"
    s3_bucket_name: "{{ s3_stack_name }}"
    src_code: "{{ app_version }}_{{ stack_name }}.zip"
    stack_name_gateway: "{{ stack_name }}-gateway"


  tasks:
     - name: zip app
       shell: "zip -j {{src_code}} ./app/dist/main"

     - name: tesing aws-lambda role
       include_role:
        name: mwaaas.aws-lambda
       vars:
         aws_lambda:
          s3:
            stack_name: "{{ s3_stack_name }}"
            stack_properties: {}
          lambda:
            stack_name: "{{ stack_name }}"
            stack_properties: {}
            template_parameters:
              Runtime: go1.x
              MemorySize: 128
              S3Stack: "{{ s3_stack_name }}"
              S3Key: "{{ src_code }}"
          gateway:
            stack_name: "{{ stack_name_gateway }}"
            stack_properties: {}
            template_parameters:
              RestApiName: "{{ stack_name }}-gateway"
              Environment: "{{ env }}"
              LambdaStack: "{{ stack_name }}"
              CertificateArn: "arn:aws:acm:eu-west-1:354955808555:certificate/41ea1a51-777a-4bdb-ad6e-787ad254ccd8"
              DomainName: "test-lambda.tumacredo.com"




     - name: Test lambda has been created and works
       uri:
        url: "{{ Stack[stack_name_gateway]['stack_outputs']['RootUrl']}}/{{env}}/{{stack_name_gateway}}"
        method: POST
        status_code: 200
        body_format: json
        body: "{{ lookup('file','body.json') }}"
       ignore_errors: yes
       register: testing_endpoint

     - name:  Fail if the response failed
       fail:
         msg: "{{ testing_endpoint.msg }}"
       when: testing_endpoint.failed

     - name: Delete a bucket and all contents
       aws_s3:
        bucket: "{{Stack[s3_stack_name]['stack_outputs']['BucketName'] }}"
        mode: delete
        profile: "{{ profile }}"

     - name: Delete stacks
       include_role:
         name: mwaaas.aws-lambda
         tasks_from: delete_stack
       with_items:
         - "{{ stack_name_gateway }}"
         - "{{ stack_name }}"
         - "{{ s3_stack_name }}"
